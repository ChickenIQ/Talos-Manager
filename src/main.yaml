- name: Talos
  hosts: cluster
  gather_facts: false
  any_errors_fatal: true
  vars:
    datastore: "/data"
    talosconfig: "{{ datastore }}/configs/talosconfig"
    kubeconfig: "{{ datastore }}/configs/kubeconfig"
    talosconfig_host: "/.talos/config"
    kubeconfig_host: "/.kube/config"

    talos_args: "-n {{ inventory_hostname }} -e {{ inventory_hostname }} --talosconfig {{ talosconfig }}"
  pre_tasks:
    - name: Set task
      run_once: true
      ansible.builtin.set_fact:
        task: "{{ lookup('env', 'TASK') }}"

    - name: Ensure the required directories are present
      run_once: true
      ansible.builtin.file:
        path: "{{ datastore }}/{{ item }}"
        state: directory
      with_items:
        - "patches"
        - "configs"

    - name: Set node type
      ansible.builtin.set_fact:
        node_type: "{{ 'controlplane' if 'controlplane' in group_names else 'worker' }}"

    - include_tasks: tasks/utils/wait_talos.yaml

    - name: Check if the node has been initialized
      ansible.builtin.command: talosctl get machinestatus {{ talos_args }} --insecure
      register: node_status
      until: node_status.rc == 0 or node_status.stderr.find("certificate required") != -1
      changed_when: false
      failed_when: false

    - name: Set node status
      ansible.builtin.set_fact:
        node_initialized: "{{ true if node_status.rc != 0 else false }}"
  tasks:
    - name: Generate configs
      run_once: true
      include_tasks: tasks/generate.yaml

    - name: Get talosconfig
      run_once: true
      include_tasks: tasks/talosconfig.yaml

    - name: Reset nodes
      include_tasks: tasks/actions/reset.yaml
      when: task == "reset" and node_initialized

    - name: Apply configs
      include_tasks: tasks/apply.yaml

    - name: Bootstrap cluster
      run_once: true
      include_tasks: tasks/bootstrap.yaml
      when: node_type == 'controlplane'

    - name: Get kubeconfig
      run_once: true
      include_tasks: tasks/kubeconfig.yaml

    - name: Setup addons
      run_once: true
      block:
        - name: Setup Cilium
          include_tasks: tasks/addons/cilium.yaml
          when: addons.cilium.enabled | default(false)

        - name: Setup FluxCD
          include_tasks: tasks/addons/fluxcd.yaml
          when: addons.fluxcd.enabled | default(false)
