- include_tasks: tasks/utils/wait_talos.yaml

- name: Check if the node has been initialized
  ansible.builtin.command: talosctl get machinestatus {{ talos_args }} --insecure
  register: node_status
  until: node_status.rc == 0 or node_status.stderr.find("certificate required") != -1
  changed_when: false
  failed_when: false

- name: Set node status
  ansible.builtin.set_fact:
    node_initialized: "{{ true if node_status.rc != 0 else false }}"

- name: Get machine config before apply
  ansible.builtin.command: talosctl get mc {{ talos_args }} -o yaml
  register: mc_before
  until: mc_before.rc == 0
  changed_when: false
  no_log: true
  when: node_initialized

- name: Check if the controlplane is ready
  ansible.builtin.command: talosctl get machinestatus {{ talos_args }} -o yaml
  register: controlplane_ready
  until: controlplane_ready.rc == 0
  changed_when: false
  when: node_initialized and node_type == "controlplane"

- name: Configure machine patches
  ansible.builtin.copy:
    content: "{{ patch | to_nice_yaml(2,false) }}"
    dest: "{{ datastore }}/patches/{{ inventory_hostname }}.yaml"
  when: patch | default({}) | length > 0

- name: Apply configs
  include_tasks: tasks/actions/apply.yaml
  # Serial Execution
  when: item == inventory_hostname
  with_items: "{{ ansible_play_hosts }}"

- name: Get machine config after apply
  ansible.builtin.command: talosctl get mc {{ talos_args }} -o yaml
  register: mc_after
  until: mc_after.rc == 0
  changed_when: false
  no_log: true
  when: node_initialized

- name: Set talos image vars
  ansible.builtin.set_fact:
    talos_image_before: "{{ (mc_before.stdout | from_yaml).spec.machine.install.image }}"
    talos_image_after: "{{ (mc_after.stdout | from_yaml).spec.machine.install.image }}"
  when: node_initialized

- name: Upgrade nodes
  include_tasks: tasks/actions/upgrade.yaml
  # Serial Execution
  with_items: "{{ ansible_play_hosts }}"
  when: item == inventory_hostname and node_initialized and talos_image_before != talos_image_after
